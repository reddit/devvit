import type { SidebarsConfig } from '@docusaurus/plugin-content-docs';

/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation
 The sidebars can be generated from the filesystem, or explicitly defined here.
 Create as many sidebars as you want.
 */

const sidebars: SidebarsConfig = {
  // By default, Docusaurus generates a sidebar from the docs folder structure
  // tutorialSidebar: [{ type: 'autogenerated', dirName: '.' }],

  tutorialSidebar: [
    {
      type: 'doc',
      label: "⚡️ The World's Largest Hackathon",
      id: 'bolt-hackathon',
    },
    {
      type: 'doc',
      label: 'Introduction',
      id: 'introduction',
    },
    {
      type: 'doc',
      label: 'Quickstart',
      id: 'quickstart',
    },
    {
      type: 'doc',
      label: 'Reddit Developer Funds',
      id: 'reddit_developer_funds',
    },
    {
      type: 'doc',
      label: 'Ask AI',
      id: 'ask_ai',
    },
    {
      type: 'category',
      label: 'Learn Devvit',
      items: [
        'dev_guide',
        'about_devvit',
        'templates',
        'publishing',
        'rendering_apps',
        'optimize_performance',
        'devvit_for_pythonistas',
      ],
    },
    {
      type: 'category',
      label: 'Showcase',
      items: [
        'showcase/apps',
        'showcase/monetization_examples',
        'showcase/playgrounds',
        'showcase/tutorials',
      ],
    },
    {
      type: 'category',
      label: 'Interactive posts',
      items: [
        'interactive_posts',
        {
          type: 'category',
          label: 'Blocks',
          items: [
            'blocks/overview',
            'blocks/stacks',
            'blocks/text',
            'blocks/icon',
            'blocks/button',
            'blocks/image',
            'blocks/spacer',
            'blocks/colors',
          ],
        },
        'webviews',
        {
          type: 'category',
          label: 'Devvit Web (experimental)',
          items: [
            'devvit_web/devvit_web_overview',
            'devvit_web/devvit_web_quickstart',
            'devvit_web/devvit_web_templates',
            'devvit_web/how_devvit_web_works',
            'devvit_web/ai_tools',
            'devvit_web/realtime',
            'devvit_web/server',
            'devvit_web/client',
            'devvit_web/future_roadmap',
          ],
        },
        'community_games',
        'app_image_assets',
        'post_size',
        'dimensions',
        'custom_post_preview',
        'text_fallback',
        'working_with_usestate',
        'working_with_useasync',
        'working_with_useinterval',
      ],
    },
    {
      type: 'category',
      label: 'Monetization',
      items: [
        'payments/payments_overview',
        'payments/payments_add',
        'payments/payments_test',
        'payments/payments_publish',
        'payments/payments_manage',
        'payments/support_this_app',
      ],
    },
    {
      type: 'category',
      label: 'Capabilities',
      items: [
        'capabilities/app-configurations',
        'capabilities/adding-links',
        'capabilities/cache',
        'capabilities/forms',
        {
          type: 'category',
          label: 'HTTP fetch',
          items: ['capabilities/http-fetch', 'capabilities/http-fetch-allowlist'],
        },
        'capabilities/image-uploads',
        'capabilities/menu-actions',
        'capabilities/redis',
        'capabilities/realtime',
        'capabilities/scheduler',
        'capabilities/secrets-storage',
        'capabilities/server-side-functions',
        'capabilities/triggers',
        'capabilities/userActions',
      ],
    },
    {
      type: 'category',
      label: 'Developer tools',
      items: ['playground', 'playtest', 'debug', 'devvit_cli', 'devvit_kit'],
    },
    {
      type: 'category',
      label: 'Reference docs',
      items: [
        {
          type: 'doc',
          label: 'Devvit library',
          id: 'api/public-api/classes/Devvit',
        },
        {
          type: 'category',
          label: 'Reddit API',
          items: [
            {
              type: 'doc',
              label: 'Client Overview',
              id: 'api/redditapi/RedditAPIClient/README',
            },
            {
              type: 'category',
              label: 'Classes',
              items: [
                {
                  type: 'autogenerated',
                  dirName: 'api/redditapi/models/classes',
                },
              ],
            },
            {
              type: 'category',
              label: 'Interfaces',
              items: [
                {
                  type: 'autogenerated',
                  dirName: 'api/redditapi/models/interfaces',
                },
              ],
            },
          ],
        },
      ],
    },
    {
      type: 'doc',
      label: 'Devvit Rules',
      id: 'devvit_rules',
    },
    {
      type: 'category',
      label: 'Resources',
      items: ['get_discovered', 'mod_resources', 'limits', 'help'],
    },
    {
      type: 'doc',
      label: 'Changelog',
      id: 'changelog',
    },
  ],
};

export default sidebars;
