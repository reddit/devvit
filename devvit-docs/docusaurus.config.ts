import type * as Preset from '@docusaurus/preset-classic';
import type { Config } from '@docusaurus/types';
import { themes as prismThemes } from 'prism-react-renderer';

const baseUrl = process.env.DOCUSAURUS_BASE_URL ?? '/';

const LATEST_DEVVIT_VERSION = '0.12'; // update-versioned-docs.mjs sets this automatically

const config: Config = {
  future: {
    v4: true,
    experimental_faster: true,
  },
  title: 'Reddit for Developers',
  tagline: 'An app for anything',
  url: 'https://developers.reddit.com',
  baseUrl,
  onBrokenLinks: 'warn',
  onBrokenMarkdownLinks: 'warn',
  favicon: '/img/devvit_icon.png',
  markdown: {
    format: 'detect',
  },
  scripts: [
    {
      src: 'https://widget.kapa.ai/kapa-widget.bundle.js',
      'data-website-id': '7ea3e92e-b2a7-4159-a3ed-a7bcd1958ca5',
      'data-project-name': 'Reddit',
      'data-modal-title': 'Devvit AI Helper',
      'data-project-color': '#FF4500',
      'data-modal-disclaimer':
        'This is an AI assistant with access to Devvit developer documentation and code examples. Please note that answers are generated by AI so remember to use your own judgment.',
      'data-modal-example-questions': 'How do I make a game?,How can I earn money for my app?',
      'data-project-logo': `${baseUrl}img/180x180.png`,
      async: true,
    },
    {
      src: `${baseUrl}events.js`,
    },
  ],

  // GitHub pages deployment config.
  // If you aren't using GitHub pages, you don't need these.
  organizationName: 'reddit', // Usually your GitHub org/user name.
  projectName: 'devvit', // Usually your repo name.

  // Even if you don't use internalization, you can use this field to set useful
  // metadata like html lang. For example, if your site is Chinese, you may want
  // to replace "en" with "zh-Hans".
  i18n: {
    defaultLocale: 'en',
    locales: ['en'],
  },
  presets: [
    [
      '@docusaurus/preset-classic',
      {
        docs: {
          routeBasePath: '/', // Serve the docs at the site's root
          sidebarPath: './sidebars.ts',
          lastVersion: LATEST_DEVVIT_VERSION,
          versions: {
            [LATEST_DEVVIT_VERSION]: {
              badge: false,
            },
          },
        },
        blog: {
          path: 'blog',
          routeBasePath: 'blog',
          // Optional blog settings
          postsPerPage: 10,
          showReadingTime: true,
          onInlineAuthors: 'ignore',
          onUntruncatedBlogPosts: 'ignore',
        },
        sitemap: {
          changefreq: 'weekly',
          priority: 0.5,
          createSitemapItems: async (params) => {
            const { defaultCreateSitemapItems, ...rest } = params;
            const items = await defaultCreateSitemapItems(rest);
            return items.filter((item) => {
              if (!/firehose|reddit-for-researchers|snapshot|next|\/\d+\.\d+\//.test(item.url)) {
                return true;
              } else {
                console.log('excluding', item.url);
                return false;
              }
            });
          },
        },
        theme: {
          customCss: './src/css/custom.css',
        },
        gtag: {
          trackingID: 'G-GWE79J8M6R',
          anonymizeIP: true,
        },
      },
    ],
    
  ],
  plugins: [
    
    
    
    [
      '@easyops-cn/docusaurus-search-local',
      {
        indexBlog: false,
        docsRouteBasePath: '/',
        ignoreFiles: [
          /(?:^|\/)api(?:\/|$)/,
          /(?:^|\/)icon$/,
          /(?:^|\/)devvit_rules$/,
          /(?:^|\/)firehose(?:\/|$)/,
          /(?:^|\/)reddit-for-researchers(?:\/|$)/,
          /(?:^|\/)migration_guide$/,
          /(?:^|\/)three_strikes$/,
          /(?:^|\/)playgrounds$/,
          /(?:^|\/)playground$/,
          /(?:^|\/)snapshot(?:\/|$)/,
        ],
      },
    ],
    [
      './plugins/llmsTxt.ts',
      {
        ignore: [
          '**/api/**',
          '**/blocks/**',
          '**/changelog.md',
          '**/icon.mdx',
          '**/devvit_rules.md',
          '**/firehose/**',
          '**/reddit-for-researchers/**',
          '**/migration_guide.md',
          '**/three_strikes.md',
          '**/playgrounds.mdx',
          '**/playground.md',
        ],
      },
    ],
    './plugins/copyDocsRaw.ts',
    './plugins/fixPrism.ts',
  ],
  themeConfig: {
    docs: {
      sidebar: {
        autoCollapseCategories: false,
      },
    },
    navbar: {
      logo: {
        alt: 'Reddit for Developers',
        src: 'img/logo.svg',
        href: 'https://developers.reddit.com/',
        target: '_self',
      },
      items: [
        {
          docsPluginId: 'default',
          type: 'docsVersionDropdown',
          position: 'left',
          dropdownActiveClassDisabled: true,
        },
      ],
    },
    footer: {
      links: [
        {
          label: 'Blog',
          to: '/blog',
        },
        {
          label: 'The Reddit Developer Fund',
          to: '/earn-money/reddit_developer_funds',
        },

        {
          label: 'r/Devvit',
          href: 'https://www.reddit.com/r/devvit',
        },
        {
          label: 'r/GamesOnReddit',
          href: 'https://www.reddit.com/r/GamesOnReddit',
        },
        {
          label: 'Join our Discord',
          href: 'https://discord.gg/Cd43ExtEFS',
        },
      ],
      style: 'dark',
      copyright: `Reddit, Inc. Â© ${new Date().getFullYear()}. Built with Docusaurus.`,
    },
    prism: {
      theme: prismThemes.github,
      darkTheme: prismThemes.dracula,
      additionalLanguages: ['json', 'bash'],
    } satisfies Preset.ThemeConfig,
    colorMode: {
      disableSwitch: false,
      respectPrefersColorScheme: true,
    },
  },
};

export default config;
