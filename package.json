{
  "private": true,
  "name": "@devvit/platform-monorepo",
  "version": "1.0.0",
  "description": "devplatform's mono repo for various packages",
  "license": "BSD-3-Clause",
  "author": "@reddit/dev-platform",
  "repository": {
    "type": "git",
    "url": "git+https://github.snooguts.net/reddit/reddit-devplatform-monorepo"
  },
  "main": "index.js",
  "scripts": {
    "build": "turbo run build --output-logs=new-only",
    "build:all": "yarn build && yarn build:go",
    "build:go": "make -C devvit-compute-go build; make -C devvit-gateway-service/ build; make -C services/snooron-worker-devvit build",
    "build:protos": "make protos",
    "bump-version": "node ./packages/repo-tools/bin/bump-packages-version.mjs",
    "clean": "turbo run clean --output-logs=new-only && rm -rf .eslintcache .nojekyll faceplate-docs",
    "clean:all": "yarn clean && yarn clean:go",
    "clean:go": "make -C devvit-compute-go clean",
    "clean:nuke": "yarn cache clean --all && git clean -dffx -e .idea -e devvit.iml",
    "clobber": "npx --yes turbo run clobber --output-logs=new-only && rm -rf node_modules",
    "dev": "turbo run dev --output-logs=new-only --parallel",
    "dev:play": "turbo run dev:build --filter=previews --filter=protos --filter=public-api --filter=runtime-lite --filter=shared-types --filter=ui-renderer --parallel --include-dependencies",
    "docs:build": "yarn workspace devvit-docs docs:build",
    "docs:gen": "yarn workspace devvit-docs gen:all",
    "docs:gen-next": "node ./packages/repo-tools/bin/gen-next-docs.mjs",
    "docs:start": "yarn workspace devvit-docs docs:start",
    "docs:update-versioned": "node ./packages/repo-tools/bin/update-versioned-docs.mjs",
    "docs:verify": "yarn workspace devvit-docs gen:verify",
    "install:all": "yarn renovate",
    "lint": "turbo run lint --output-logs=new-only",
    "lint:all": "yarn lint && yarn lint:pkg-json && yarn lint:go",
    "lint:go": "make -C devvit-compute-go lint && make -C devvit-gateway-service lint && make -C services/snooron-worker-devvit lint",
    "lint:lockfile": "lockfile-lint --path yarn.lock",
    "lint:pkg-json": "prettier-package-json --list-different && ./scripts/check-deps.sh",
    "rebuild": "yarn && yarn clean && yarn build --force",
    "renovate": "yarn build || true && yarn build:go && yarn renovate:go",
    "renovate:go": "make -C devvit-compute-go protos; make -C devvit-gateway-service protos; make -C devvit-compute-go fmt; make -C devvit-gateway-service fmt; make -C services/snooron-worker-devvit fmt; cd go-common && go mod tidy",
    "renovate:js": "cd devvit-dev-portal; yarn",
    "renovate:tidy": "cd go-common; go mod tidy; cd ../devvit-compute-go; go mod tidy; cd ../devvit-gateway-service; go mod tidy; cd ../services/snooron-worker-devvit; go mod tidy; cd ../..",
    "reset": "yarn cache clean --all && git clean -dffx && git restore .",
    "test": "turbo run test --output-logs=new-only",
    "test:all": "yarn test:types && yarn lint && yarn test:unit-with-coverage && yarn test:go",
    "test:go": "make -C devvit-compute-go run-go-tests && make -C devvit-gateway-service test && make -C services/snooron-worker-devvit test-unit",
    "test:size": "turbo run test:size --output-logs=new-only",
    "test:types": "turbo run test:types --output-logs=new-only",
    "test:ui": "turbo run test:ui --output-logs=new-only",
    "test:unit": "turbo run test:unit --output-logs=new-only",
    "test:unit-with-coverage": "turbo run test:unit-with-coverage --output-logs=new-only",
    "test:update": "yarn test:unit -- -- -u"
  },
  "workspaces": [
    "__e2e__/*",
    "__e2e__/performance/apps/**",
    "devenv",
    "devvit-compute-go/images/*",
    "devvit-docs",
    "packages/*",
    "packages/apps/**",
    "packages/build-pack/src/__tests__/test-actors/**/*",
    "packages/internal-examples/internal-projects/**/*"
  ],
  "resolutions": {
    "@babel/traverse": "^7.23.2",
    "@xmldom/xmldom": "^0.8.4",
    "chalk": "4.1.2",
    "dompurify": "^2.5.0",
    "http-cache-semantics": "^4.1.1",
    "long": "4.0.0",
    "nan": "2.20.0",
    "protobufjs": "7.3.2",
    "recursive-readdir/minimatch": "3.1.2",
    "remark-parse/trim": "0.0.3",
    "serve-handler/minimatch": "3.1.2",
    "strip-ansi@3.0.1/ansi-regex": "3.0.1",
    "vite": "5.2.12",
    "wait-on/rxjs": "7.8.1",
    "yosay/ansi-regex": "3.0.1"
  },
  "dependencies": {
    "typescript": "5.3.2"
  },
  "devDependencies": {
    "@benasher44/eslint-plugin-implicit-dependencies": "1.1.3",
    "@eslint/js": "9.3.0",
    "@reddit/eslint-plugin-i18n-shreddit": "0.1.0",
    "@reddit/eslint-plugin-no-unsafe": "1.0.0",
    "@reddit/faceplate-docs": "0.4.12",
    "@reddit/json-config": "0.4.2",
    "@sentry/cli": "2.11.0",
    "check-dependency-version-consistency": "3.0.3",
    "eslint": "9.11.1",
    "eslint-config-prettier": "8.5.0",
    "eslint-plugin-lit": "1.13.0",
    "eslint-plugin-no-unsafe": "0.0.5",
    "eslint-plugin-no-unsanitized": "4.1.2",
    "eslint-plugin-no-wildcard-postmessage": "0.2.0",
    "eslint-plugin-prettier": "5.1.3",
    "eslint-plugin-prototype-pollution-security-rules": "1.0.6",
    "eslint-plugin-scanjs-rules": "0.2.1",
    "eslint-plugin-security": "3.0.0",
    "eslint-plugin-simple-import-sort": "12.1.1",
    "eslint-plugin-sonarjs": "1.0.3",
    "globals": "15.2.0",
    "lerna": "8.1.7",
    "lint-staged": "13.0.3",
    "lockfile-lint": "4.10.1",
    "prettier": "3.3.3",
    "prettier-package-json": "2.8.0",
    "turbo": "1.6.3",
    "typedoc": "0.28.0",
    "typescript-eslint": "8.8.1",
    "vitest": "1.6.0"
  },
  "engines": {
    "node": ">=22.2.0"
  },
  "packageManager": "yarn@4.5.3"
}
