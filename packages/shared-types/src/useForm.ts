/** A unique key generated by `Devvit.createForm` or the `useForm` hook. */
export type FormKey = `form.${number}` | `form.hook.${string}.${number}`;

export function formKeyToHookId(formKey: string | FormKey): string | undefined {
  // extract the hook id from the form key with a regex
  const match = formKey.match(/form\.hook\.(.+)\.0/);

  /**
   * It's tempting to throw here, but it will be RenderPost. All events for RenderPost flow to RenderPostContent
   * lands in `Devvit.ts`. That means form ids flow through here and in the new world we've changed what a hook ID looks
   * like. For now, we warn until the migration is complete and can later on turn this into a throw.
   */
  if (!match?.[1]) {
    // This shows on every form submit in RenderPost so just going to leave it out
    // console.warn(
    //   `Could not parse a hook ref from form key '${formKey}'. Please make sure you are passing in a string that starts with 'form.hook.' and ends with '0'. If you are seeing this warning using RenderPost, it is safe to ignore.`
    // );

    return;
  }

  return match[1];
}
